{"ast":null,"code":"var _jsxFileName = \"C:\\\\Contabia\\\\frontend\\\\src\\\\components\\\\ClientManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport KanbanBoard from './KanbanBoard';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst mockClientes = [{\n  id: 'cliente_001',\n  nombre: 'Cliente A'\n}, {\n  id: 'cliente_002',\n  nombre: 'Cliente B'\n}];\nconst mockTareas = [{\n  id: 1,\n  titulo: 'Enviar resumen',\n  estado: 'Pendiente',\n  clienteId: 'cliente_001'\n}, {\n  id: 2,\n  titulo: 'Preparar DJ',\n  estado: 'En Progreso',\n  clienteId: 'cliente_001'\n}, {\n  id: 3,\n  titulo: 'Facturar mes',\n  estado: 'Pendiente',\n  clienteId: 'cliente_002'\n}, {\n  id: 4,\n  titulo: 'Llamar cliente',\n  estado: 'Completada',\n  clienteId: 'cliente_002'\n}];\nconst ClientManagement = () => {\n  _s();\n  const [clienteSeleccionado, setClienteSeleccionado] = useState(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Gesti\\xF3n de Clientes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"mr-2 font-semibold\",\n        children: \"Seleccionar cliente:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: (clienteSeleccionado === null || clienteSeleccionado === void 0 ? void 0 : clienteSeleccionado.id) || '',\n        onChange: e => {\n          const cliente = mockClientes.find(c => c.id === e.target.value);\n          setClienteSeleccionado(cliente);\n        },\n        className: \"border p-1 rounded\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"-- Seleccionar --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), mockClientes.map(cliente => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: cliente.id,\n          children: cliente.nombre\n        }, cliente.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), clienteSeleccionado && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold mb-2\",\n        children: [\"Tareas de \", clienteSeleccionado.nombre]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(KanbanBoard, {\n        tareas: mockTareas,\n        clienteId: clienteSeleccionado.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(ClientManagement, \"JIeFbvlOtaCGLrv1OHP78X0IAFk=\");\n_c = ClientManagement;\nexport default ClientManagement;\nvar _c;\n$RefreshReg$(_c, \"ClientManagement\");","map":{"version":3,"names":["React","useState","KanbanBoard","jsxDEV","_jsxDEV","Fragment","_Fragment","mockClientes","id","nombre","mockTareas","titulo","estado","clienteId","ClientManagement","_s","clienteSeleccionado","setClienteSeleccionado","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","cliente","find","c","target","map","tareas","_c","$RefreshReg$"],"sources":["C:/Contabia/frontend/src/components/ClientManagement.js"],"sourcesContent":["import React, { useState } from 'react';\nimport KanbanBoard from './KanbanBoard';\n\nconst mockClientes = [\n  { id: 'cliente_001', nombre: 'Cliente A' },\n  { id: 'cliente_002', nombre: 'Cliente B' },\n];\n\nconst mockTareas = [\n  { id: 1, titulo: 'Enviar resumen', estado: 'Pendiente', clienteId: 'cliente_001' },\n  { id: 2, titulo: 'Preparar DJ', estado: 'En Progreso', clienteId: 'cliente_001' },\n  { id: 3, titulo: 'Facturar mes', estado: 'Pendiente', clienteId: 'cliente_002' },\n  { id: 4, titulo: 'Llamar cliente', estado: 'Completada', clienteId: 'cliente_002' },\n];\n\nconst ClientManagement = () => {\n  const [clienteSeleccionado, setClienteSeleccionado] = useState(null);\n\n  return (\n    <div className=\"p-4\">\n      <h1 className=\"text-2xl font-bold mb-4\">Gesti√≥n de Clientes</h1>\n\n      <div className=\"mb-4\">\n        <label className=\"mr-2 font-semibold\">Seleccionar cliente:</label>\n        <select\n          value={clienteSeleccionado?.id || ''}\n          onChange={(e) => {\n            const cliente = mockClientes.find(c => c.id === e.target.value);\n            setClienteSeleccionado(cliente);\n          }}\n          className=\"border p-1 rounded\"\n        >\n          <option value=\"\">-- Seleccionar --</option>\n          {mockClientes.map(cliente => (\n            <option key={cliente.id} value={cliente.id}>\n              {cliente.nombre}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      {clienteSeleccionado && (\n        <>\n          <h2 className=\"text-xl font-semibold mb-2\">Tareas de {clienteSeleccionado.nombre}</h2>\n          <KanbanBoard tareas={mockTareas} clienteId={clienteSeleccionado.id} />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ClientManagement;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExC,MAAMC,YAAY,GAAG,CACnB;EAAEC,EAAE,EAAE,aAAa;EAAEC,MAAM,EAAE;AAAY,CAAC,EAC1C;EAAED,EAAE,EAAE,aAAa;EAAEC,MAAM,EAAE;AAAY,CAAC,CAC3C;AAED,MAAMC,UAAU,GAAG,CACjB;EAAEF,EAAE,EAAE,CAAC;EAAEG,MAAM,EAAE,gBAAgB;EAAEC,MAAM,EAAE,WAAW;EAAEC,SAAS,EAAE;AAAc,CAAC,EAClF;EAAEL,EAAE,EAAE,CAAC;EAAEG,MAAM,EAAE,aAAa;EAAEC,MAAM,EAAE,aAAa;EAAEC,SAAS,EAAE;AAAc,CAAC,EACjF;EAAEL,EAAE,EAAE,CAAC;EAAEG,MAAM,EAAE,cAAc;EAAEC,MAAM,EAAE,WAAW;EAAEC,SAAS,EAAE;AAAc,CAAC,EAChF;EAAEL,EAAE,EAAE,CAAC;EAAEG,MAAM,EAAE,gBAAgB;EAAEC,MAAM,EAAE,YAAY;EAAEC,SAAS,EAAE;AAAc,CAAC,CACpF;AAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAEpE,oBACEG,OAAA;IAAKc,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBf,OAAA;MAAIc,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEhEnB,OAAA;MAAKc,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnBf,OAAA;QAAOc,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAAC;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAClEnB,OAAA;QACEoB,KAAK,EAAE,CAAAR,mBAAmB,aAAnBA,mBAAmB,uBAAnBA,mBAAmB,CAAER,EAAE,KAAI,EAAG;QACrCiB,QAAQ,EAAGC,CAAC,IAAK;UACf,MAAMC,OAAO,GAAGpB,YAAY,CAACqB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACrB,EAAE,KAAKkB,CAAC,CAACI,MAAM,CAACN,KAAK,CAAC;UAC/DP,sBAAsB,CAACU,OAAO,CAAC;QACjC,CAAE;QACFT,SAAS,EAAC,oBAAoB;QAAAC,QAAA,gBAE9Bf,OAAA;UAAQoB,KAAK,EAAC,EAAE;UAAAL,QAAA,EAAC;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAC1ChB,YAAY,CAACwB,GAAG,CAACJ,OAAO,iBACvBvB,OAAA;UAAyBoB,KAAK,EAAEG,OAAO,CAACnB,EAAG;UAAAW,QAAA,EACxCQ,OAAO,CAAClB;QAAM,GADJkB,OAAO,CAACnB,EAAE;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEf,CACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EAELP,mBAAmB,iBAClBZ,OAAA,CAAAE,SAAA;MAAAa,QAAA,gBACEf,OAAA;QAAIc,SAAS,EAAC,4BAA4B;QAAAC,QAAA,GAAC,YAAU,EAACH,mBAAmB,CAACP,MAAM;MAAA;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACtFnB,OAAA,CAACF,WAAW;QAAC8B,MAAM,EAAEtB,UAAW;QAACG,SAAS,EAAEG,mBAAmB,CAACR;MAAG;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,eACtE,CACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACR,EAAA,CAlCID,gBAAgB;AAAAmB,EAAA,GAAhBnB,gBAAgB;AAoCtB,eAAeA,gBAAgB;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}