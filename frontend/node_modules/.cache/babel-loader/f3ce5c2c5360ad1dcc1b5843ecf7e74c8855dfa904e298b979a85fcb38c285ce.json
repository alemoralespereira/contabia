{"ast":null,"code":"var _jsxFileName = \"C:\\\\Contabia\\\\frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Sidebar from './Sidebar';\nimport Header from './Header';\nimport KanbanBoard from './KanbanBoard';\nimport TeamManagement from './TeamManagement';\nimport ClientManagement from './ClientManagement';\nimport Reports from './Reports';\nimport UserProfile from './UserProfile';\nimport { tasks as initialTasks } from '../mock/tasks';\nimport { users as initialUsers } from '../mock/users'; // Renombrado para evitar conflicto\nimport { teams as initialTeams } from '../mock/users'; // Renombrado para evitar conflicto\nimport { accounts } from '../mock/users';\nimport { clients as initialClients } from '../mock/clients'; // Renombrado para evitar conflicto\nimport { getUserTeamMembers } from '../utils/auth';\nimport { getTasksByUser, updateTaskStatus } from '../utils/taskUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({\n  user,\n  onLogout\n}) => {\n  _s();\n  const [currentView, setCurrentView] = useState('kanban');\n  const [currentTasks, setCurrentTasks] = useState(initialTasks);\n  const [currentUsers, setCurrentUsers] = useState(initialUsers);\n  const [currentTeams, setCurrentTeams] = useState(initialTeams);\n  const [currentClients, setCurrentClients] = useState(initialClients);\n  const [selectedTeamMember, setSelectedTeamMember] = useState(null);\n\n  // Obtener miembros del equipo si el user es supervisor o admin\n  const teamMembers = getUserTeamMembers(user, Array.isArray(currentUsers) ? currentUsers : [], Array.isArray(currentTeams) ? currentTeams : []);\n\n  // Efecto para resetear la selección de miembro cuando la vista cambia a algo que no es kanban\n  useEffect(() => {\n    if (currentView !== 'kanban') {\n      setSelectedTeamMember(null);\n    }\n  }, [currentView]);\n\n  // Manejar cambio de estado de una tarea\n  const handleTaskStatusChange = (taskId, newStatus) => {\n    const updatedTasks = updateTaskStatus(currentTasks, taskId, newStatus);\n    setCurrentTasks(updatedTasks);\n  };\n\n  // Manejar la selección de un miembro del equipo para ver sus tareas\n  const handleTeamMemberSelect = memberId => {\n    setSelectedTeamMember(memberId);\n    setCurrentView('kanban'); // Asegurarse de que la vista sea Kanban\n  };\n\n  // Funciones de administración para Clientes\n  const handleAddClient = newClient => {\n    setCurrentClients(prevClients => [...prevClients, {\n      ...newClient,\n      id: prevClients.length + 1\n    }]);\n  };\n  const handleEditClient = updatedClient => {\n    setCurrentClients(prevClients => prevClients.map(client => client.id === updatedClient.id ? updatedClient : client));\n  };\n\n  // Funciones de administración para Equipos\n  const handleAddTeam = newTeam => {\n    setCurrentTeams(prevTeams => [...prevTeams, {\n      ...newTeam,\n      id: prevTeams.length + 1\n    }]);\n  };\n  const handleEditTeam = updatedTeam => {\n    setCurrentTeams(prevTeams => prevTeams.map(team => team.id === updatedTeam.id ? updatedTeam : team));\n  };\n  const handleDeleteTeam = teamId => {\n    setCurrentTeams(prevTeams => prevTeams.filter(team => team.id !== teamId));\n    setCurrentUsers(prevUsers => prevUsers.map(user => user.teamId === teamId ? {\n      ...user,\n      teamId: null\n    } : user));\n  };\n  const handleAssignSupervisor = (teamId, supervisorId) => {\n    setCurrentTeams(prevTeams => prevTeams.map(team => team.id === teamId ? {\n      ...team,\n      supervisorId: supervisorId\n    } : team));\n  };\n\n  // Funciones de administración para Miembros\n  const handleAddMember = newMember => {\n    // Generar un ID único para el nuevo miembro\n    const newId = Math.max(...currentUsers.map(u => u.id)) + 1;\n    const memberWithId = {\n      ...newMember,\n      id: newId\n    };\n    setCurrentUsers(prevUsers => [...prevUsers, memberWithId]);\n    return memberWithId; // Devolver el miembro con su ID\n  };\n  const handleEditMember = updatedMember => {\n    setCurrentUsers(prevUsers => prevUsers.map(member => member.id === updatedMember.id ? updatedMember : member));\n  };\n  const handleDeleteMember = memberId => {\n    setCurrentUsers(prevUsers => prevUsers.filter(member => member.id !== memberId));\n    setCurrentTasks(prevTasks => prevTasks.map(task => task.assigneeId === memberId ? {\n      ...task,\n      assigneeId: null\n    } : task));\n  };\n  const handleAddTeamMember = (memberId, teamId) => {\n    setCurrentUsers(prevUsers => prevUsers.map(user => user.id === memberId ? {\n      ...user,\n      teamId: teamId\n    } : user));\n  };\n  const handleRemoveTeamMember = memberId => {\n    setCurrentUsers(prevUsers => prevUsers.map(user => user.id === memberId ? {\n      ...user,\n      teamId: null\n    } : user));\n  };\n\n  // Determinar qué tareas mostrar en el tablero Kanban\n  const getKanbanTasks = () => {\n    // Aseguramos que currentTasks sea un array antes de filtrar\n    const tasksToFilter = Array.isArray(currentTasks) ? currentTasks : [];\n\n    // Si hay un miembro del equipo seleccionado, mostrar sus tareas\n    if (selectedTeamMember) {\n      return getTasksByUser(tasksToFilter, selectedTeamMember);\n    }\n    // Si no hay miembro seleccionado, mostrar las tareas del user logueado\n    return getTasksByUser(tasksToFilter, user.id);\n  };\n\n  // Renderizar la vista actual\n  const renderCurrentView = () => {\n    // Añadimos console.log para depurar el estado del user y la vista\n    console.log(\"Dashboard: Rendering view:\", currentView, \"User:\", user, \"Selected Member:\", selectedTeamMember);\n    console.log(\"Dashboard: currentTasks length:\", currentTasks.length);\n    console.log(\"Dashboard: currentUsers length:\", currentUsers.length);\n    console.log(\"Dashboard: currentClients length:\", currentClients.length);\n    console.log(\"Dashboard: currentTeams length:\", currentTeams.length);\n    switch (currentView) {\n      case 'kanban':\n        return /*#__PURE__*/_jsxDEV(KanbanBoard, {\n          tasks: getKanbanTasks(),\n          onStatusChange: handleTaskStatusChange,\n          clients: currentClients,\n          users: currentUsers,\n          selectedUser: selectedTeamMember ? currentUsers.find(u => u.id === selectedTeamMember) : user,\n          currentUser: user,\n          onClearSelection: () => setSelectedTeamMember(null)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this);\n      case 'teams':\n        return /*#__PURE__*/_jsxDEV(TeamManagement, {\n          teams: currentTeams,\n          users: currentUsers,\n          currentUser: user,\n          onSelectMember: handleTeamMemberSelect,\n          onAddTeam: handleAddTeam,\n          onEditTeam: handleEditTeam,\n          onDeleteTeam: handleDeleteTeam,\n          onAddMember: handleAddMember // Pasamos la función de agregar miembro\n          ,\n          onEditMember: handleEditMember,\n          onDeleteMember: handleDeleteMember,\n          onAddTeamMember: handleAddTeamMember // Pasamos la función de asignar miembro a equipo\n          ,\n          onRemoveTeamMember: handleRemoveTeamMember,\n          onAssignSupervisor: handleAssignSupervisor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this);\n      case 'clients':\n        return /*#__PURE__*/_jsxDEV(ClientManagement, {\n          clients: currentClients,\n          currentUser: user,\n          onAddClient: handleAddClient,\n          onEditClient: handleEditClient\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this);\n      case 'reports':\n        return /*#__PURE__*/_jsxDEV(Reports, {\n          tasks: currentTasks,\n          users: currentUsers,\n          teams: currentTeams,\n          clients: currentClients,\n          currentUser: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this);\n      case 'profile':\n        return /*#__PURE__*/_jsxDEV(UserProfile, {\n          user: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 16\n        }, this);\n      default:\n        // Fallback seguro si currentView es un valor inesperado\n        console.warn(\"Unexpected currentView:\", currentView, \"Defaulting to KanbanBoard.\");\n        return /*#__PURE__*/_jsxDEV(KanbanBoard, {\n          tasks: getKanbanTasks(),\n          onStatusChange: handleTaskStatusChange,\n          clients: currentClients,\n          users: currentUsers,\n          selectedUser: user // Por defecto, mostrar las tareas del user logueado\n          ,\n          currentUser: user,\n          onClearSelection: () => setSelectedTeamMember(null)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen bg-gray-50\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      currentView: currentView,\n      setCurrentView: setCurrentView,\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 flex flex-col overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        user: user,\n        onLogout: onLogout,\n        teamMembers: teamMembers,\n        selectedMember: selectedTeamMember,\n        onSelectMember: handleTeamMemberSelect,\n        onClearSelection: () => setSelectedTeamMember(null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"flex-1 overflow-y-auto bg-gray-50 p-4\",\n        children: renderCurrentView()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"/h1+z4XbMdba6UyfnXGkAfZDJn0=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Sidebar","Header","KanbanBoard","TeamManagement","ClientManagement","Reports","UserProfile","tasks","initialTasks","users","initialUsers","teams","initialTeams","accounts","clients","initialClients","getUserTeamMembers","getTasksByUser","updateTaskStatus","jsxDEV","_jsxDEV","Dashboard","user","onLogout","_s","currentView","setCurrentView","currentTasks","setCurrentTasks","currentUsers","setCurrentUsers","currentTeams","setCurrentTeams","currentClients","setCurrentClients","selectedTeamMember","setSelectedTeamMember","teamMembers","Array","isArray","handleTaskStatusChange","taskId","newStatus","updatedTasks","handleTeamMemberSelect","memberId","handleAddClient","newClient","prevClients","id","length","handleEditClient","updatedClient","map","client","handleAddTeam","newTeam","prevTeams","handleEditTeam","updatedTeam","team","handleDeleteTeam","teamId","filter","prevUsers","handleAssignSupervisor","supervisorId","handleAddMember","newMember","newId","Math","max","u","memberWithId","handleEditMember","updatedMember","member","handleDeleteMember","prevTasks","task","assigneeId","handleAddTeamMember","handleRemoveTeamMember","getKanbanTasks","tasksToFilter","renderCurrentView","console","log","onStatusChange","selectedUser","find","currentUser","onClearSelection","fileName","_jsxFileName","lineNumber","columnNumber","onSelectMember","onAddTeam","onEditTeam","onDeleteTeam","onAddMember","onEditMember","onDeleteMember","onAddTeamMember","onRemoveTeamMember","onAssignSupervisor","onAddClient","onEditClient","warn","className","children","selectedMember","_c","$RefreshReg$"],"sources":["C:/Contabia/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Sidebar from './Sidebar';\nimport Header from './Header';\nimport KanbanBoard from './KanbanBoard';\nimport TeamManagement from './TeamManagement';\nimport ClientManagement from './ClientManagement';\nimport Reports from './Reports';\nimport UserProfile from './UserProfile';\nimport { tasks as initialTasks } from '../mock/tasks';\nimport { users as initialUsers } from '../mock/users'; // Renombrado para evitar conflicto\nimport { teams as initialTeams } from '../mock/users'; // Renombrado para evitar conflicto\nimport { accounts } from '../mock/users';\nimport { clients as initialClients } from '../mock/clients'; // Renombrado para evitar conflicto\nimport { getUserTeamMembers } from '../utils/auth';\nimport { getTasksByUser, updateTaskStatus } from '../utils/taskUtils';\n\nconst Dashboard = ({ user, onLogout }) => {\n  const [currentView, setCurrentView] = useState('kanban');\n  const [currentTasks, setCurrentTasks] = useState(initialTasks);\n  const [currentUsers, setCurrentUsers] = useState(initialUsers);\n  const [currentTeams, setCurrentTeams] = useState(initialTeams);\n  const [currentClients, setCurrentClients] = useState(initialClients);\n  const [selectedTeamMember, setSelectedTeamMember] = useState(null);\n  \n  // Obtener miembros del equipo si el user es supervisor o admin\n  const teamMembers = getUserTeamMembers(user, Array.isArray(currentUsers) ? currentUsers : [], Array.isArray(currentTeams) ? currentTeams : []);\n  \n  // Efecto para resetear la selección de miembro cuando la vista cambia a algo que no es kanban\n  useEffect(() => {\n    if (currentView !== 'kanban') {\n      setSelectedTeamMember(null);\n    }\n  }, [currentView]);\n\n  // Manejar cambio de estado de una tarea\n  const handleTaskStatusChange = (taskId, newStatus) => {\n    const updatedTasks = updateTaskStatus(currentTasks, taskId, newStatus);\n    setCurrentTasks(updatedTasks);\n  };\n  \n  // Manejar la selección de un miembro del equipo para ver sus tareas\n  const handleTeamMemberSelect = (memberId) => {\n    setSelectedTeamMember(memberId);\n    setCurrentView('kanban'); // Asegurarse de que la vista sea Kanban\n  };\n\n  // Funciones de administración para Clientes\n  const handleAddClient = (newClient) => {\n    setCurrentClients(prevClients => [...prevClients, { ...newClient, id: prevClients.length + 1 }]);\n  };\n\n  const handleEditClient = (updatedClient) => {\n    setCurrentClients(prevClients => prevClients.map(client => \n      client.id === updatedClient.id ? updatedClient : client\n    ));\n  };\n\n  // Funciones de administración para Equipos\n  const handleAddTeam = (newTeam) => {\n    setCurrentTeams(prevTeams => [...prevTeams, { ...newTeam, id: prevTeams.length + 1 }]);\n  };\n\n  const handleEditTeam = (updatedTeam) => {\n    setCurrentTeams(prevTeams => prevTeams.map(team => \n      team.id === updatedTeam.id ? updatedTeam : team\n    ));\n  };\n\n  const handleDeleteTeam = (teamId) => {\n    setCurrentTeams(prevTeams => prevTeams.filter(team => team.id !== teamId));\n    setCurrentUsers(prevUsers => prevUsers.map(user => \n      user.teamId === teamId ? { ...user, teamId: null } : user\n    ));\n  };\n\n  const handleAssignSupervisor = (teamId, supervisorId) => {\n    setCurrentTeams(prevTeams => prevTeams.map(team => \n      team.id === teamId ? { ...team, supervisorId: supervisorId } : team\n    ));\n  };\n\n  // Funciones de administración para Miembros\n  const handleAddMember = (newMember) => {\n    // Generar un ID único para el nuevo miembro\n    const newId = Math.max(...currentUsers.map(u => u.id)) + 1;\n    const memberWithId = { ...newMember, id: newId };\n    setCurrentUsers(prevUsers => [...prevUsers, memberWithId]);\n    return memberWithId; // Devolver el miembro con su ID\n  };\n\n  const handleEditMember = (updatedMember) => {\n    setCurrentUsers(prevUsers => prevUsers.map(member => \n      member.id === updatedMember.id ? updatedMember : member\n    ));\n  };\n\n  const handleDeleteMember = (memberId) => {\n    setCurrentUsers(prevUsers => prevUsers.filter(member => member.id !== memberId));\n    setCurrentTasks(prevTasks => prevTasks.map(task => \n      task.assigneeId === memberId ? { ...task, assigneeId: null } : task\n    ));\n  };\n\n  const handleAddTeamMember = (memberId, teamId) => {\n    setCurrentUsers(prevUsers => prevUsers.map(user => \n      user.id === memberId ? { ...user, teamId: teamId } : user\n    ));\n  };\n\n  const handleRemoveTeamMember = (memberId) => {\n    setCurrentUsers(prevUsers => prevUsers.map(user => \n      user.id === memberId ? { ...user, teamId: null } : user\n    ));\n  };\n  \n  // Determinar qué tareas mostrar en el tablero Kanban\n  const getKanbanTasks = () => {\n    // Aseguramos que currentTasks sea un array antes de filtrar\n    const tasksToFilter = Array.isArray(currentTasks) ? currentTasks : [];\n\n    // Si hay un miembro del equipo seleccionado, mostrar sus tareas\n    if (selectedTeamMember) {\n      return getTasksByUser(tasksToFilter, selectedTeamMember);\n    }\n    // Si no hay miembro seleccionado, mostrar las tareas del user logueado\n    return getTasksByUser(tasksToFilter, user.id);\n  };\n  \n  // Renderizar la vista actual\n  const renderCurrentView = () => {\n    // Añadimos console.log para depurar el estado del user y la vista\n    console.log(\"Dashboard: Rendering view:\", currentView, \"User:\", user, \"Selected Member:\", selectedTeamMember);\n    console.log(\"Dashboard: currentTasks length:\", currentTasks.length);\n    console.log(\"Dashboard: currentUsers length:\", currentUsers.length);\n    console.log(\"Dashboard: currentClients length:\", currentClients.length);\n    console.log(\"Dashboard: currentTeams length:\", currentTeams.length);\n\n\n    switch (currentView) {\n      case 'kanban':\n        return (\n          <KanbanBoard \n            tasks={getKanbanTasks()} \n            onStatusChange={handleTaskStatusChange}\n            clients={currentClients} \n            users={currentUsers}       \n            selectedUser={selectedTeamMember ? currentUsers.find(u => u.id === selectedTeamMember) : user}\n            currentUser={user}\n            onClearSelection={() => setSelectedTeamMember(null)}\n          />\n        );\n      case 'teams':\n        return (\n          <TeamManagement \n            teams={currentTeams} \n            users={currentUsers} \n            currentUser={user}\n            onSelectMember={handleTeamMemberSelect}\n            onAddTeam={handleAddTeam}\n            onEditTeam={handleEditTeam}\n            onDeleteTeam={handleDeleteTeam}\n            onAddMember={handleAddMember} // Pasamos la función de agregar miembro\n            onEditMember={handleEditMember}\n            onDeleteMember={handleDeleteMember}\n            onAddTeamMember={handleAddTeamMember} // Pasamos la función de asignar miembro a equipo\n            onRemoveTeamMember={handleRemoveTeamMember}\n            onAssignSupervisor={handleAssignSupervisor}\n          />\n        );\n      case 'clients':\n        return (\n          <ClientManagement \n            clients={currentClients} \n            currentUser={user} \n            onAddClient={handleAddClient}\n            onEditClient={handleEditClient}\n          />\n        );\n      case 'reports':\n        return (\n          <Reports \n            tasks={currentTasks} \n            users={currentUsers} \n            teams={currentTeams} \n            clients={currentClients}\n            currentUser={user}\n          />\n        );\n      case 'profile':\n        return <UserProfile user={user} />;\n      default:\n        // Fallback seguro si currentView es un valor inesperado\n        console.warn(\"Unexpected currentView:\", currentView, \"Defaulting to KanbanBoard.\");\n        return (\n          <KanbanBoard \n            tasks={getKanbanTasks()} \n            onStatusChange={handleTaskStatusChange}\n            clients={currentClients}\n            users={currentUsers}\n            selectedUser={user} // Por defecto, mostrar las tareas del user logueado\n            currentUser={user}\n            onClearSelection={() => setSelectedTeamMember(null)}\n          />\n        );\n    }\n  };\n\n  return (\n    <div className=\"flex h-screen bg-gray-50\">\n      <Sidebar \n        currentView={currentView} \n        setCurrentView={setCurrentView}\n        user={user}\n      />\n      \n      <div className=\"flex-1 flex flex-col overflow-hidden\">\n        <Header \n          user={user} \n          onLogout={onLogout}\n          teamMembers={teamMembers}\n          selectedMember={selectedTeamMember}\n          onSelectMember={handleTeamMemberSelect}\n          onClearSelection={() => setSelectedTeamMember(null)}\n        />\n        \n        <main className=\"flex-1 overflow-y-auto bg-gray-50 p-4\">\n          {renderCurrentView()}\n        </main>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}