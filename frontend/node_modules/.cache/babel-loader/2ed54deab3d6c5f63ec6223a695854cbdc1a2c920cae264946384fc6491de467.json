{"ast":null,"code":"import React,{useState}from'react';import KanbanBoard from'./KanbanBoard';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const mockClientes=[{id:'cliente_001',nombre:'Cliente A'},{id:'cliente_002',nombre:'Cliente B'}];const mockTareas=[{id:1,titulo:'Enviar resumen',estado:'Pendiente',clienteId:'cliente_001'},{id:2,titulo:'Preparar DJ',estado:'En Progreso',clienteId:'cliente_001'},{id:3,titulo:'Facturar mes',estado:'Pendiente',clienteId:'cliente_002'},{id:4,titulo:'Llamar cliente',estado:'Completada',clienteId:'cliente_002'}];const ClientManagement=()=>{const[clienteSeleccionado,setClienteSeleccionado]=useState(null);return/*#__PURE__*/_jsxs(\"div\",{className:\"p-4\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl font-bold mb-4\",children:\"Gesti\\xF3n de Clientes\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"mr-2 font-semibold\",children:\"Seleccionar cliente:\"}),/*#__PURE__*/_jsxs(\"select\",{value:(clienteSeleccionado===null||clienteSeleccionado===void 0?void 0:clienteSeleccionado.id)||'',onChange:e=>{const cliente=mockClientes.find(c=>c.id===e.target.value);setClienteSeleccionado(cliente);},className:\"border p-1 rounded\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"-- Seleccionar --\"}),mockClientes.map(cliente=>/*#__PURE__*/_jsx(\"option\",{value:cliente.id,children:cliente.nombre},cliente.id))]})]}),clienteSeleccionado&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"h2\",{className:\"text-xl font-semibold mb-2\",children:[\"Tareas de \",clienteSeleccionado.nombre]}),/*#__PURE__*/_jsx(KanbanBoard,{tareas:mockTareas,clienteId:clienteSeleccionado.id})]})]});};export default ClientManagement;","map":{"version":3,"names":["React","useState","KanbanBoard","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","mockClientes","id","nombre","mockTareas","titulo","estado","clienteId","ClientManagement","clienteSeleccionado","setClienteSeleccionado","className","children","value","onChange","e","cliente","find","c","target","map","tareas"],"sources":["C:/Contabia/frontend/src/components/ClientManagement.js"],"sourcesContent":["import React, { useState } from 'react';\nimport KanbanBoard from './KanbanBoard';\n\nconst mockClientes = [\n  { id: 'cliente_001', nombre: 'Cliente A' },\n  { id: 'cliente_002', nombre: 'Cliente B' },\n];\n\nconst mockTareas = [\n  { id: 1, titulo: 'Enviar resumen', estado: 'Pendiente', clienteId: 'cliente_001' },\n  { id: 2, titulo: 'Preparar DJ', estado: 'En Progreso', clienteId: 'cliente_001' },\n  { id: 3, titulo: 'Facturar mes', estado: 'Pendiente', clienteId: 'cliente_002' },\n  { id: 4, titulo: 'Llamar cliente', estado: 'Completada', clienteId: 'cliente_002' },\n];\n\nconst ClientManagement = () => {\n  const [clienteSeleccionado, setClienteSeleccionado] = useState(null);\n\n  return (\n    <div className=\"p-4\">\n      <h1 className=\"text-2xl font-bold mb-4\">Gesti√≥n de Clientes</h1>\n\n      <div className=\"mb-4\">\n        <label className=\"mr-2 font-semibold\">Seleccionar cliente:</label>\n        <select\n          value={clienteSeleccionado?.id || ''}\n          onChange={(e) => {\n            const cliente = mockClientes.find(c => c.id === e.target.value);\n            setClienteSeleccionado(cliente);\n          }}\n          className=\"border p-1 rounded\"\n        >\n          <option value=\"\">-- Seleccionar --</option>\n          {mockClientes.map(cliente => (\n            <option key={cliente.id} value={cliente.id}>\n              {cliente.nombre}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      {clienteSeleccionado && (\n        <>\n          <h2 className=\"text-xl font-semibold mb-2\">Tareas de {clienteSeleccionado.nombre}</h2>\n          <KanbanBoard tareas={mockTareas} clienteId={clienteSeleccionado.id} />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ClientManagement;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,WAAW,KAAM,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAExC,KAAM,CAAAC,YAAY,CAAG,CACnB,CAAEC,EAAE,CAAE,aAAa,CAAEC,MAAM,CAAE,WAAY,CAAC,CAC1C,CAAED,EAAE,CAAE,aAAa,CAAEC,MAAM,CAAE,WAAY,CAAC,CAC3C,CAED,KAAM,CAAAC,UAAU,CAAG,CACjB,CAAEF,EAAE,CAAE,CAAC,CAAEG,MAAM,CAAE,gBAAgB,CAAEC,MAAM,CAAE,WAAW,CAAEC,SAAS,CAAE,aAAc,CAAC,CAClF,CAAEL,EAAE,CAAE,CAAC,CAAEG,MAAM,CAAE,aAAa,CAAEC,MAAM,CAAE,aAAa,CAAEC,SAAS,CAAE,aAAc,CAAC,CACjF,CAAEL,EAAE,CAAE,CAAC,CAAEG,MAAM,CAAE,cAAc,CAAEC,MAAM,CAAE,WAAW,CAAEC,SAAS,CAAE,aAAc,CAAC,CAChF,CAAEL,EAAE,CAAE,CAAC,CAAEG,MAAM,CAAE,gBAAgB,CAAEC,MAAM,CAAE,YAAY,CAAEC,SAAS,CAAE,aAAc,CAAC,CACpF,CAED,KAAM,CAAAC,gBAAgB,CAAGA,CAAA,GAAM,CAC7B,KAAM,CAACC,mBAAmB,CAAEC,sBAAsB,CAAC,CAAGjB,QAAQ,CAAC,IAAI,CAAC,CAEpE,mBACEK,KAAA,QAAKa,SAAS,CAAC,KAAK,CAAAC,QAAA,eAClBhB,IAAA,OAAIe,SAAS,CAAC,yBAAyB,CAAAC,QAAA,CAAC,wBAAmB,CAAI,CAAC,cAEhEd,KAAA,QAAKa,SAAS,CAAC,MAAM,CAAAC,QAAA,eACnBhB,IAAA,UAAOe,SAAS,CAAC,oBAAoB,CAAAC,QAAA,CAAC,sBAAoB,CAAO,CAAC,cAClEd,KAAA,WACEe,KAAK,CAAE,CAAAJ,mBAAmB,SAAnBA,mBAAmB,iBAAnBA,mBAAmB,CAAEP,EAAE,GAAI,EAAG,CACrCY,QAAQ,CAAGC,CAAC,EAAK,CACf,KAAM,CAAAC,OAAO,CAAGf,YAAY,CAACgB,IAAI,CAACC,CAAC,EAAIA,CAAC,CAAChB,EAAE,GAAKa,CAAC,CAACI,MAAM,CAACN,KAAK,CAAC,CAC/DH,sBAAsB,CAACM,OAAO,CAAC,CACjC,CAAE,CACFL,SAAS,CAAC,oBAAoB,CAAAC,QAAA,eAE9BhB,IAAA,WAAQiB,KAAK,CAAC,EAAE,CAAAD,QAAA,CAAC,mBAAiB,CAAQ,CAAC,CAC1CX,YAAY,CAACmB,GAAG,CAACJ,OAAO,eACvBpB,IAAA,WAAyBiB,KAAK,CAAEG,OAAO,CAACd,EAAG,CAAAU,QAAA,CACxCI,OAAO,CAACb,MAAM,EADJa,OAAO,CAACd,EAEb,CACT,CAAC,EACI,CAAC,EACN,CAAC,CAELO,mBAAmB,eAClBX,KAAA,CAAAE,SAAA,EAAAY,QAAA,eACEd,KAAA,OAAIa,SAAS,CAAC,4BAA4B,CAAAC,QAAA,EAAC,YAAU,CAACH,mBAAmB,CAACN,MAAM,EAAK,CAAC,cACtFP,IAAA,CAACF,WAAW,EAAC2B,MAAM,CAAEjB,UAAW,CAACG,SAAS,CAAEE,mBAAmB,CAACP,EAAG,CAAE,CAAC,EACtE,CACH,EACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAAM,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}