{"ast":null,"code":"var _jsxFileName = \"C:\\\\Contabia\\\\frontend\\\\src\\\\components\\\\KanbanBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst estados = ['pendiente', 'en_progreso', 'completada'];\nfunction KanbanBoard() {\n  _s();\n  const [tareas, setTareas] = useState({\n    pendiente: [],\n    en_progreso: [],\n    completada: []\n  });\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_API_URL}/tareas`, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n      }\n    }).then(response => response.json()).then(data => {\n      const agrupadas = {\n        pendiente: [],\n        en_progreso: [],\n        completada: []\n      };\n      data.forEach(tarea => {\n        if (agrupadas[tarea.estado]) {\n          agrupadas[tarea.estado].push(tarea);\n        }\n      });\n      setTareas(agrupadas);\n    }).catch(error => console.error('Error cargando tareas:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      gap: '20px'\n    },\n    children: estados.map(estado => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        border: '1px solid #ccc',\n        padding: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: estado.toUpperCase()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), tareas[estado].map(tarea => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: '10px 0',\n          padding: '8px',\n          backgroundColor: '#f0f0f0'\n        },\n        children: tarea.titulo\n      }, tarea.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this))]\n    }, estado, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(KanbanBoard, \"xav6r6ll30GwF1dzGZy0Fx9qy5c=\");\n_c = KanbanBoard;\nexport default KanbanBoard;\nvar _c;\n$RefreshReg$(_c, \"KanbanBoard\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","estados","KanbanBoard","_s","tareas","setTareas","pendiente","en_progreso","completada","fetch","process","env","REACT_APP_API_URL","headers","Authorization","localStorage","getItem","then","response","json","data","agrupadas","forEach","tarea","estado","push","catch","error","console","style","display","gap","children","map","flex","border","padding","toUpperCase","fileName","_jsxFileName","lineNumber","columnNumber","margin","backgroundColor","titulo","id","_c","$RefreshReg$"],"sources":["C:/Contabia/frontend/src/components/KanbanBoard.js"],"sourcesContent":["\nimport React, { useEffect, useState } from 'react';\n\nconst estados = ['pendiente', 'en_progreso', 'completada'];\n\nfunction KanbanBoard() {\n  const [tareas, setTareas] = useState({\n    pendiente: [],\n    en_progreso: [],\n    completada: []\n  });\n\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_API_URL}/tareas`, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n      }\n    })\n      .then(response => response.json())\n      .then(data => {\n        const agrupadas = {\n          pendiente: [],\n          en_progreso: [],\n          completada: []\n        };\n        data.forEach(tarea => {\n  \tif (agrupadas[tarea.estado]) {\n    \tagrupadas[tarea.estado].push(tarea);\n  \t}\n\t});\n\n        setTareas(agrupadas);\n      })\n      .catch(error => console.error('Error cargando tareas:', error));\n  }, []);\n\n  return (\n    <div style={{ display: 'flex', gap: '20px' }}>\n      {estados.map(estado => (\n        <div key={estado} style={{ flex: 1, border: '1px solid #ccc', padding: '10px' }}>\n          <h3>{estado.toUpperCase()}</h3>\n          {tareas[estado].map(tarea => (\n            <div key={tarea.id} style={{ margin: '10px 0', padding: '8px', backgroundColor: '#f0f0f0' }}>\n              {tarea.titulo}\n            </div>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default KanbanBoard;\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,OAAO,GAAG,CAAC,WAAW,EAAE,aAAa,EAAE,YAAY,CAAC;AAE1D,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC;IACnCQ,SAAS,EAAE,EAAE;IACbC,WAAW,EAAE,EAAE;IACfC,UAAU,EAAE;EACd,CAAC,CAAC;EAEFX,SAAS,CAAC,MAAM;IACdY,KAAK,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,SAAS,EAAE;MAC/CC,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MACxD;IACF,CAAC,CAAC,CACCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZ,MAAMC,SAAS,GAAG;QAChBf,SAAS,EAAE,EAAE;QACbC,WAAW,EAAE,EAAE;QACfC,UAAU,EAAE;MACd,CAAC;MACDY,IAAI,CAACE,OAAO,CAACC,KAAK,IAAI;QAC3B,IAAIF,SAAS,CAACE,KAAK,CAACC,MAAM,CAAC,EAAE;UAC3BH,SAAS,CAACE,KAAK,CAACC,MAAM,CAAC,CAACC,IAAI,CAACF,KAAK,CAAC;QACrC;MACF,CAAC,CAAC;MAEKlB,SAAS,CAACgB,SAAS,CAAC;IACtB,CAAC,CAAC,CACDK,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC,CAAC;EACnE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE3B,OAAA;IAAK6B,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,GAAG,EAAE;IAAO,CAAE;IAAAC,QAAA,EAC1C/B,OAAO,CAACgC,GAAG,CAACT,MAAM,iBACjBxB,OAAA;MAAkB6B,KAAK,EAAE;QAAEK,IAAI,EAAE,CAAC;QAAEC,MAAM,EAAE,gBAAgB;QAAEC,OAAO,EAAE;MAAO,CAAE;MAAAJ,QAAA,gBAC9EhC,OAAA;QAAAgC,QAAA,EAAKR,MAAM,CAACa,WAAW,CAAC;MAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EAC9BrC,MAAM,CAACoB,MAAM,CAAC,CAACS,GAAG,CAACV,KAAK,iBACvBvB,OAAA;QAAoB6B,KAAK,EAAE;UAAEa,MAAM,EAAE,QAAQ;UAAEN,OAAO,EAAE,KAAK;UAAEO,eAAe,EAAE;QAAU,CAAE;QAAAX,QAAA,EACzFT,KAAK,CAACqB;MAAM,GADLrB,KAAK,CAACsB,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEb,CACN,CAAC;IAAA,GANMjB,MAAM;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOX,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACtC,EAAA,CA7CQD,WAAW;AAAA4C,EAAA,GAAX5C,WAAW;AA+CpB,eAAeA,WAAW;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}